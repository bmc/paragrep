.\"
.\" Paragraph Grep utility
.\"
.\" Copyright (c) 1989-2008 by Brian M. Clapper
.\"
.\" $Id$
.\" ---------------------------------------------------------------------------
.if n .na
.\" Define a copyright string that's friendlier in nroff.  Also define
.\" a special .Qi macro: it sets off a string by quoting it in nroff and
.\" displaying it in italics in troff.
.ie n .ds Co (c)
.el   .ds Co \(co
.de Qi
.ie t .I "\\$1"
.el "\\$1"
..
.de Un
\fI\\$1\fR(\\$2)\\$3
..
.\" ---------------------------------------------------------------------------
.TH PARAGREP 1 "8 April 1995"
.SH NAME
paragrep - search paragraphs in a file for patterns
.SH SYNOPSIS
paragrep
[
.B \-aiotv
]
[
.BI \-p " eop_expression"
]
[
.BI \-e " expression"
]
[
.BI \-f " exp_file"
] ...
[
.I file
] ...
.sp
or
.sp
paragrep
[
.B \-itv
]
[
.BI \-p " eop_expression"
]
.I expression
[
.I file
] .\|.\|.
.SH DESCRIPTION
.PP
.B Paragrep
is a \fIp\fRaragraph
.I grep
utility.  It searches for a series of regular expressions in a text file
(or several text files) and prints out the paragraphs containing those
expressions.  Normally a paragraph is displayed if it contains any of the
expressions; this behavior can be modified by using the
.B \-a 
option.
.PP
By default, a paragraph is defined as a block of text delimited by an empty or
blank line; this behavior can be altered with the
.B \-p
option. 
.PP
If no files are specified on the command line,
.B paragrep
searches standard input.
.SH OPTIONS
.\" ------------------------------------------------------------------------
.\"                                  -a option
.\" ------------------------------------------------------------------------
.TP 15
.B \-a
The
.Qi "and"
option: 
Only display a paragraph if it contains
.I all
the regular expressions specified.  The default is to display a paragraph
if it contains
.I any
of the regular expressions specified. (See the
.B \-o
option, below.)
.\" ------------------------------------------------------------------------
.\"                                  -e option
.\" ------------------------------------------------------------------------
.TP 15
.BI \-e " expression"
Adds a regular expression to the set of expressions against which
paragraphs are to be matched.   More than one 
.B \-e
argument may be specified.  If only one expression is specified, the 
.B \-e
may be omitted, as in the second form of the command, above.
.\" ------------------------------------------------------------------------
.\"                                  -f option
.\" ------------------------------------------------------------------------
.TP 15
.BI \-f " expfile"
Specifies a file containing regular expressions, one expression per line.
Each expression in the file is added to the set of expression against which
paragraphs are to be matched.   More than one 
.B \-f
argument is permitted. Also,
.B \-f
and
.B \-e
may be specified together.
.\" ------------------------------------------------------------------------
.\"                                  -i option
.\" ------------------------------------------------------------------------
.TP 15
.BI \-i
Considers upper- and lower-case letters to be identical when making
comparisons.
.\" ------------------------------------------------------------------------
.\"                                  -o option
.\" ------------------------------------------------------------------------
.TP 15
.B \-o
The
.Qi "or"
option: 
Display a paragraph if it contains
.I any
of the regular expressions specified.  Since this option is the default, it
is rarely specified on the command line.  It exists primarily to negate the
effect of a previous 
.B \-a
option.  (e.g., If you've defined an alias for
.B paragrep
that specifies the
.B \-a
option, 
.B \-o
would be necessary to force the
.Qi or
behavior.)
.\" ------------------------------------------------------------------------
.\"                                  -p option
.\" ------------------------------------------------------------------------
.TP 15
.BI \-p " eop_expression"
Specifies a regular expression to be used match paragraph delimiters.  Any
line that matches this regular expression is assumed to delimit paragraphs
without actually being part of a paragraph (i.e., lines matching this
expression are never printed).  If this option is not specified, it
defaults to `\f(CW^[ \\t]*$\fP'
which matches blank or empty lines.  (`\f(CW\\t\fP'
represents the horizontal tab character.  If you need to specify a
horizontal tab, you'll need to type the actual character;
.B paragrep
doesn't recognize C-style metacharacters.)
.\" ------------------------------------------------------------------------
.\"                                  -v option
.\" ------------------------------------------------------------------------
.TP 15
.BI \-v
Displays all lines that do not match specified expressions.  The negation
logic works on DeMorgan's Laws.  Normally, if
.B \-a
is specified,
.B paragrep 
uses the following logic to match the paragraph:
.sp
.RS
.RS
match = 
.I contains
(expr1)
.B AND
.I contains
(expr2)
.B AND
.I contains
(expr3) \|.\|.\|.
.RE
.RE
.IP
Specifying
.B \-v
along with
.B \-a
changes this logic to:
.sp
.RS
.RS
match = 
.I lacks
(expr1)
.B OR
.I lacks
(expr2)
.B OR
.I lacks
(expr3) \|.\|.\|.
.RE
.RE
.IP
Likewise, without
.B \-a
or
.B \-v
(i.e., using the 
.B \-o
option, which is the default)
the matching logic is:
.sp
.RS
.RS
match =
.I contains
(expr1)
.B OR
.I contains
(expr1)
.B OR
.I contains
(expr1) \|.\|.\|.
.RE
.RE
.IP
Negating that logic with
.B \-v
causes paragrep to match paragraphs with:
.sp
.RS
.RS
match =
.I lacks
(expr1)
.B AND
.I lacks
(expr2)
.B AND
.I lacks
(expr3) \|.\|.\|.
.RE
.RE
.SH "SEE ALSO"
.Un ed 1 ,
.Un grep 1 ,
.Un perl 1
.SH BUGS
.PP
\fBParagrep\fP's notion of
.I troff
directives is overly restrictive.  To be less restrictive, you must conjure
up a more complicated
.B \-p
value.
.PP
.B Paragrep
reads each paragraph into a 
.I perl 
array before scanning it for matches; as a result, extremely long
paragraphs can suck up memory.
.LP
The logic behind how
.B \-v
works can be confusing to the uninitiated.
.SH AUTHOR
Brian M. Clapper,
.br
.I http://www.clapper.org/bmc/
.\" ---------------------------------------------------------------------------
@@LICENSE@@
